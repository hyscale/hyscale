# Build workflow gets auto triggered whenever a change to the file a.txt is merged to release branch

name: Release

on:
  push:
    tags:
    - "v*"

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-18.04
    strategy:
      matrix:
              java: [ 11 ]
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow
    
    # Download's the hyscale binaries from Dev Latest and pointing it to the Prod latest
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: release_info
      id: release_info
      run: |
         . .github/workflows/release_info.sh
         echo ::set-output name=CHANGELOG::$(echo -e "${CHANGELOG}")
         for binary in hyscale win/hyscale.exe mac/hyscale hyscale.jar
         do
           curl https://s3-$AWS_REGION.amazonaws.com/$AWS_DEV_S3_BUCKET/hyscale/release/latest/$binary --create-dirs -o /var/tmp/$binary
           aws s3 cp /var/tmp/$binary s3://$AWS_S3_BUCKET/hyscale/release/latest/$binary
           aws s3api put-object-tagging --bucket $AWS_S3_BUCKET  --key hyscale/release/latest/$binary --tagging 'TagSet=[{Key=hyscalepubliccontent,Value=true}]'
         done
         project_version=`cat pom.xml | grep "<version>.*</version>" | head -1 |awk -F'[><]' '{print $3}'`
         echo ::set-output name=RELEASE_VERSION::$(echo $project_version)
         echo ::set-output name=RELEASE_NAME::$(cat pom.xml | grep "<release.name>.*</release.name>" | head -1 |awk -F'[><]' '{print $3}')
         mvn deploy:deploy-file -DrepositoryId=github -Durl=https://maven.pkg.github.com/hyscale/hyscale -Dfile=/var/tmp/hyscale.jar -DgroupId=io.hyscale -DartifactId=hyscale -Dversion=$project_version
         mv /var/tmp/hyscale /var/tmp/hyscale-$project_version-linux
         mv /var/tmp/mac/hyscale /var/tmp/hyscale-$project_version-darwin
         mv /var/tmp/win/hyscale.exe /var/tmp/hyscale-$project_version-windows.exe
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.HYS_STABLE_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.HYS_STABLE_AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        AWS_S3_BUCKET: ${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}
        AWS_DEV_S3_BUCKET: ${{ secrets.HYS_DEV_AWS_S3_BUCKET }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create and Upload Release
      run: |
        set -x
        assets=()
        for asset in /var/tmp/hyscale-${{ steps.release_info.outputs.RELEASE_VERSION }}-linux /var/tmp/hyscale-${{ steps.release_info.outputs.RELEASE_VERSION }}-darwin /var/tmp/hyscale-${{ steps.release_info.outputs.RELEASE_VERSION }}-windows.exe ; do
          assets+=("-a" "$asset")
        done
        tag_name="${GITHUB_REF##*/}"
        hub release create "${assets[@]}" -m "${{ steps.release_info.outputs.RELEASE_NAME }}" -m "v${{ steps.release_info.outputs.RELEASE_VERSION }} Release
        Find the installation instructions at https://github.com/hyscale/hyscale/wiki/Installation" "$tag_name"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: URL to Download Hyscale Artifact
      run: |
          echo -en "CHANGE LOG: \n${{ steps.release_info.outputs.CHANGELOG }} \n-------------------------------------------------------- \n" >> hyscale_version.txt
          echo -en "Hyscale tool Build Completed Successfully with $(echo ${GITHUB_REF##*/})\n\nLinux Binary can be downloaded using \ncurl -sSL ${{ secrets.HYS_STABLE_BINARY_URL }} | bash \n\nMAC Binary can be downloaded using \nwget https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}/hyscale/release/latest/mac/hyscale \n\nWindows Binary can be downloaded using \nInvoke-WebRequest -Uri https://s3-us-west-2.amazonaws.com/${{ secrets.HYS_STABLE_AWS_S3_BUCKET }}/hyscale/release/latest/win/hyscale.exe -OutFile hyscale.exe" >> hyscale_version.txt
    - name: SendGrid
      uses: peter-evans/sendgrid-action@v1
      env:
        SENDGRID_API_KEY: ${{ secrets.HYS_SENDGRID_API_KEY }}
